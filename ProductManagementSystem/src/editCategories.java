/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author davidesfandiary
 */

import java.sql.*;
import javax.swing.JTable;

public class editCategories extends javax.swing.JFrame {

    /**
     * Creates new form editCategories
     */
    public editCategories() {
        initComponents();
    }
    
    public editCategories(loggedIn parentPage) {
        initComponents();
        
        this.parentPage = parentPage;
        this.OGName = parentPage.getItemsCategoryCB().getSelectedItem().toString();
        fillData();
    }
    
    private String OGName;
    
    private loggedIn parentPage;
    
    private static final String dburl = "jdbc:mysql://localhost:3306/finals";
    private static final String dbusername = "root";
    private static final String dbpassword = "rootroot";
    
    private void fillData(){
        categoriesEditNameTF.setText(this.OGName);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        categoriesUpdateBTN = new javax.swing.JButton();
        categoriesDeleteBTN = new javax.swing.JButton();
        categoriesEditNameTF = new javax.swing.JTextField();
        categoriesCreateBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel6.setText("Category Name:");

        categoriesUpdateBTN.setText("Update");
        categoriesUpdateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesUpdateBTNActionPerformed(evt);
            }
        });

        categoriesDeleteBTN.setText("Delete");
        categoriesDeleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesDeleteBTNActionPerformed(evt);
            }
        });

        categoriesEditNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesEditNameTFActionPerformed(evt);
            }
        });

        categoriesCreateBTN.setText("Create");
        categoriesCreateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriesCreateBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(categoriesDeleteBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(categoriesUpdateBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(categoriesCreateBTN))
                    .addComponent(categoriesEditNameTF))
                .addGap(0, 90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(categoriesEditNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoriesDeleteBTN)
                            .addComponent(categoriesUpdateBTN)
                            .addComponent(categoriesCreateBTN)))
                    .addComponent(jLabel6))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void categoriesUpdateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesUpdateBTNActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(dburl, dbusername, dbpassword);

            String name = categoriesEditNameTF.getText();

            String query = "UPDATE Categories SET category_name = ?"
            + "WHERE category_name = ?";

            PreparedStatement preparedStatement = con.prepareStatement(query);
            preparedStatement.setString(1, name);
            preparedStatement.setString(2, this.OGName);

            preparedStatement.executeUpdate();

            //categoriesUpdateNameTF.setText("");

          
       
            parentPage.loadCategoriesCB(parentPage.getItemsCategoryCB());
            parentPage.loadTable();
            this.setVisible(false);


            preparedStatement.close();
            con.close();
        }
        catch(Exception e) {
            e.printStackTrace(); // This shows the exact line causing the issue
            System.err.println("Items Update Error: " + e.getMessage());
        }
    }//GEN-LAST:event_categoriesUpdateBTNActionPerformed

    private void categoriesDeleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesDeleteBTNActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(dburl, dbusername, dbpassword);

            String name = categoriesEditNameTF.getText();

            String query = "DELETE FROM Categories WHERE category_name = ?";

            PreparedStatement preparedStatement = con.prepareStatement(query);
            preparedStatement.setString(1, this.OGName);

            preparedStatement.executeUpdate();

            //categoriesUpdateNameTF.setText("");

          
       
            parentPage.loadCategoriesCB(parentPage.getItemsCategoryCB());
            parentPage.loadTable();
            this.setVisible(false);


            preparedStatement.close();
            con.close();
        }

        catch(Exception e) {
            System.err.println("Items Delete Error: " + e.getMessage());
        }
    }//GEN-LAST:event_categoriesDeleteBTNActionPerformed

    private void categoriesEditNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesEditNameTFActionPerformed
    
    }//GEN-LAST:event_categoriesEditNameTFActionPerformed

    private void categoriesCreateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriesCreateBTNActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(dburl, dbusername, dbpassword);

            String name = categoriesEditNameTF.getText();

            String query = "INSERT INTO Categories (category_name) VALUES (?)";

            PreparedStatement preparedStatement = con.prepareStatement(query);
            preparedStatement.setString(1, name);

            preparedStatement.executeUpdate();

            //categoriesUpdateNameTF.setText("");

          
       
            parentPage.loadCategoriesCB(parentPage.getItemsCategoryCB());
            parentPage.loadTable();
            parentPage.getItemsCategoryCB().getModel().setSelectedItem(name);
            this.setVisible(false);


            preparedStatement.close();
            con.close();
        }

        catch(Exception e) {
            System.err.println("Items Delete Error: " + e.getMessage());
        }
    }//GEN-LAST:event_categoriesCreateBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editCategories().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton categoriesCreateBTN;
    private javax.swing.JButton categoriesDeleteBTN;
    private javax.swing.JTextField categoriesEditNameTF;
    private javax.swing.JButton categoriesUpdateBTN;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
